version: "2.29"
services:

  postgres:
    container_name: database
    image: postgres:16
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/pgsql/data
      - ./postgres_init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 3s
      timeout: 4s
      retries: 10
      start_period: 10s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - ./.env
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin_config.json:/pgadmin4/servers.json
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  api:
    container_name: api
    build:
      context: ./backend
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    command: npm run dev

    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local